[tool.autopep8]
max_line_length = 120

[tool.ruff]

# Exclude a variety of commonly ignored directories.
exclude = [
  ".dist",
  ".env",
  ".git",
  ".git-rewrite",
  ".github",
  ".ipynb_checkpoints",
  ".ruff_cache",
  ".venv",
  "__pycache__",
  "__pypackages__",
]

line-length = 120

target-version = "py312"

[tool.ruff.lint]
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


# Enable the pycodestyle (`E`) and Pyflakes (`F`) rules by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
# Enable all `pydocstyle` rules, limiting to those that adhere to the
# Google convention via `convention = "google"`, below.
select = ["E", "F", "W", "D", "ARG"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[project]
name = "sheerwater-benchmarking"
version = "0.1.0"
description = "Equitable weather and climate forecasting benchmarking package."
authors = [
    { name = "Joshua Adkins", email = "josh@rhizaresearch.org" }
]
dependencies = [
    "dask",
    "dask[complete]",
    "click",
    "numpy",
    "httplib2",
    "s3fs",
    "google-api-python-client",
    "proto-plus==1.24.0.dev1",
    "google-cloud-storage",
    "google-cloud-secret-manager",
    "cryptography",
    "ipykernel",
    "jupyterlab",
    "xarray==2025.6",
    "matplotlib",
    "geopandas",
    "rioxarray",
    "notebook",
    "jupytext",
    "dask-kubernetes",
    "gcsfs",
    "zarr @ git+https://github.com/zarr-developers/zarr-python@ba1f71a2af6f5d15eab71f43bdb0b85c76898ebe",
    "h5py",
    "netcdf4",
    "h5netcdf",
    "scipy",
    "requests",
    "ecmwf-api-client",
    "cdsapi>=0.7.3",
    # Required for the CDS API beta
    "dateparser",
    "bokeh",
    "flox",
    "ruff",
    "pytest",
    "scikit-learn",
    "terracotta",
    "sqlalchemy",
    "psycopg2-binary",
    "xarray-regrid",
    "weatherbench2 @ git+https://github.com/rhiza-research/weatherbench2",
    "deltalake",
    "jupyter-server-proxy",
    "xskillscore @ git+https://github.com/rhiza-research/xskillscore",
    "coiled>=1.76.1",
    "opt-einsum>=3.4.0",
    "plotly>=5.24.1",
    "salientsdk>=0.3.12",
    "dask_deltatable",
    "minio",
    "huggingface_hub",
    "py7zr",
    "pyzstd==0.16.2",
    "tqdm",
    "numcodecs<0.16.0",
]
readme = "README.md"
requires-python = ">= 3.12"

# This is a custom property to instantiate a coiled software environment
[tool.sheerwater_benchmarking.coiled]
conda-dependencies = []

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = []

[tool.rye.scripts]
# These three options are equivalent:
coiled-env = "python ./tools/create-coiled-software-environment.py"
coiled-run-keepalive = "coiled run --software sheerwater-env --keepalive 20m --name $USER"
coiled-run = "./tools/create-and-run.sh"
coiled-notebook = "./tools/create-and-notebook.sh"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["./sheerwater_benchmarking", "./jobs"]
