# This StatefulSet manages multiple Terracotta pods with differentiated storage access:
# - Pod-0: Primary pod with read-write access to the data volume
# - Pod-1+: Replica pods with read-only access to the same data volume
#
# Key features:
# 1. OrderedReady pod management ensures pod-0 is ready before starting replicas
# 2. Init container logs whether each pod is primary or replica
# 3. Volume mounts are configured as read-only for replica pods
# 4. Volume selection based on pod ordinal (primary vs replica)
#
# This configuration enables horizontal scaling while maintaining data consistency
# through a single writer, multiple reader pattern.

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "sheerwater-benchmarking.fullname" . }}-terracotta
  labels:
    app: {{ include "sheerwater-benchmarking.name" . }}-terracotta
    release: {{ .Release.Name }}
spec:
  serviceName: {{ include "sheerwater-benchmarking.fullname" . }}-terracotta
  replicas: {{ .Values.terracotta.replicas }}
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ include "sheerwater-benchmarking.name" . }}-terracotta
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        timestamp: '{{ now | date "2006-01-02T15:04:05" }}'
      labels:
        app: {{ include "sheerwater-benchmarking.name" . }}-terracotta
        release: {{ .Release.Name }}
    spec:
      initContainers:
      - name: init-volume
        image: busybox
        command: ['sh', '-c', 'POD_ORDINAL=$(echo $HOSTNAME | rev | cut -d- -f1 | rev); if [ "$POD_ORDINAL" = "0" ]; then echo "Primary pod (read-write)"; else echo "Replica pod (read-only)"; fi']
      containers:
        - name: {{ .Chart.Name }}-terracotta
          image: {{ .Values.terracotta.image.repository }}:{{ .Values.terracotta.image.tag }}
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: {{ .Values.terracotta.resources.requests.cpu }}
              memory: {{ .Values.terracotta.resources.requests.memory }}
            limits:
              cpu: {{ .Values.terracotta.resources.limits.cpu }}
              memory: {{ .Values.terracotta.resources.limits.memory }}
          ports:
            - containerPort: 5000
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: "/keys"
              port: 5000
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          env:
          - name: TC_DRIVER_PATH
            value: {{ .Values.terracotta.driver_path }}
          - name: TC_DEBUG
            value: "true"
          - name: TC_LOG_LEVEL
            value: "debug"
          - name: TC_FLASK_PROFILE
            value: "true"
          - name: TC_RESAMPLING_METHOD
            value: "nearest"
          - name: TC_REPROJECTION_METHOD
            value: "nearest"
          - name: TC_ALLOWED_ORIGINS_TILES
            value: '["*"]'
          - name: TC_MULTIPROCESSING_WORKERS
            value: "{{ .Values.terracotta.multiprocessing_workers }}"
          envFrom:
            - secretRef:
                name: {{ include "sheerwater-benchmarking.fullname" . }}-terracotta-secrets
          volumeMounts:
            - mountPath: /mnt/sheerwater-datalake
              name: terracotta-rasters
      serviceAccountName: sheerwater-sa
      volumes:
        - name: terracotta-rasters
          persistentVolumeClaim:
            claimName: {{ include "sheerwater-benchmarking.fullname" . }}-terracotta-{{ if eq 0 (int (trimSuffix "-terracotta" (trimPrefix (printf "%s-" (include "sheerwater-benchmarking.fullname" .)) .Release.Name))) }}primary{{ else }}replica{{ end }}
