# Default values for ephemeral-grafana-applicationset
# This configures the Argo CD ApplicationSet that manages ephemeral Grafana instances

# GitHub repository configuration
github:
  # GitHub organization or user name
  org: "rhiza-research"
  
  # Repository name (this should be the Grafana repository, not the infrastructure repo)
  repo: "sheerwater-benchmarking"
  
  # GitHub token secret reference
  tokenSecret:
    name: "github-token"
    key: "token"

oauth:
  google:
    client_id: ""
    client_secret: ""

# Domain configuration
# This value is overridden by the infrastructure repo dns record output
domain: "dev.sheerwater.rhizaresearch.org"

# ApplicationSet configuration
applicationSet:
  # Name of the ApplicationSet
  name: "ephemeral-grafana"
  
  # Namespace where ApplicationSet will be created
  namespace: "argocd"
  
  # Polling interval for checking PRs (in seconds)
  # Set to 0 to disable polling (webhook recommended)
  pollingInterval: 300  # 5 minutes

# Infrastructure overrides for ephemeral instances
# These are infrastructure concerns that the ApplicationSet needs to manage
ephemeral:
  # Admin password for ephemeral Grafana instances
  # This should be overridden via Terraform or Helm --set
  admin_password: "changeme"
  # Use an existing secret for the admin user.
  # admin:
  #   ## Name of the secret. Can be templated.
  #   existingSecret: ""
  #   userKey: admin-user
  #   passwordKey: admin-password
  
  # Ingress configuration for PR-specific hostnames
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    tls:
      enabled: true
  
  # Resource limits for ephemeral instances
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi

# ApplicationSet sync policy
syncPolicy:
  automated:
    prune: true
    selfHeal: true
  syncOptions:
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
  retry:
    limit: 5
    backoff:
      duration: 5s
      factor: 2
      maxDuration: 3m

# Argo CD project to use
project: "default"

# Webhook configuration (disabled by default)
webhook:
  # Enable webhook ingress for real-time PR detection
  enabled: false
  
  # Webhook ingress configuration
  name: "argocd-applicationset-webhook"
  # This value is overridden by the infrastructure repo dns record output so it matches our dns records
  host: "argocd-webhook.dev.sheerwater.rhizaresearch.org"
  ingressClassName: "nginx"
  
  # Ingress annotations
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  
  # TLS configuration
  tls:
    enabled: true
    secretName: "argocd-webhook-tls"
  
  # Webhook secret (optional but recommended for security)
  secret:
    create: false
    name: "webhook-secret"
    key: "webhook.github.secret"
    value: ""

# Notification configuration for PR comments
notifications:
  # Enable notifications (requires GitHub App configuration)
  enabled: false
  
  # Create the notifications ConfigMap
  createConfig: false
  
  # GitHub App configuration (preferred method)
  github:
    authType: "app"
    
    # GitHub App settings 
    app:
      appID: ""
      installationID: ""
      privateKeySecret:
        name: "argocd-notifications-secret"
        key: "github-privateKey"
  
  # Annotations to add to ApplicationSet template  
  annotations:
    "notifications.argoproj.io/subscribe.on-deployed.github": ""
    "notifications.argoproj.io/subscribe.on-deleted.github": ""
  
  # Customize notification templates (optional)
  templates:
    deployedMessage: ""
    deletedMessage: "" 